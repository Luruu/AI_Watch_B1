[2022-11-02 18:06:03,957] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@2e5c649, name=log4j:logger=kafka.controller (kafka.controller)
[2022-11-02 18:06:07,766] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-11-02 18:06:07,820] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2022-11-02 18:06:07,823] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2022-11-02 18:06:07,869] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2022-11-02 18:06:07,873] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-11-02 18:06:07,876] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-11-02 18:06:07,880] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2022-11-02 18:06:07,911] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2022-11-02 18:06:07,926] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2022-11-02 18:06:07,939] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2022-11-02 18:06:07,948] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2022-11-02 18:06:07,952] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2022-11-02 18:06:07,952] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-11-02 18:06:07,953] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-11-02 18:06:07,953] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-11-02 18:06:07,955] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-11-02 18:06:07,956] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-11-02 18:06:07,957] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-11-02 18:06:07,958] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-11-02 18:06:07,963] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2022-11-02 18:06:07,969] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-11-02 18:06:07,970] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-11-02 18:06:07,971] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-11-02 18:06:07,972] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2022-11-02 18:06:07,972] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-11-02 18:06:07,972] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-11-02 18:06:07,974] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2022-11-02 18:06:07,974] INFO [RequestSendThread controllerId=0] Controller 0 connected to 192.168.160.195:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-11-02 18:06:07,974] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2022-11-02 18:06:07,977] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-11-02 18:06:07,977] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-11-02 18:06:07,977] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-11-02 18:06:07,977] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-11-02 18:06:07,978] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-11-02 18:06:08,005] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-11-02 18:06:13,006] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-11-02 18:06:13,006] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-11-02 18:07:11,729] INFO [Controller id=0] New topics: [Set(topic1)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic1,Some(LKfYzjl8S5uRF5D1M90uZw),Map(topic1-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), topic1-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), topic1-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-11-02 18:07:11,730] INFO [Controller id=0] New partition creation callback for topic1-0,topic1-1,topic1-2 (kafka.controller.KafkaController)
[2022-11-02 18:07:11,929] INFO [Controller id=0] New topics: [Set(topic2, topic_test)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic2,Some(jrxzzOxQRoCOQ5N8626Mig),Map(topic2-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), topic2-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), topic2-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))), TopicIdReplicaAssignment(topic_test,Some(PaqEO2r4SZKX94xJuHM02A),Map(topic_test-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), topic_test-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), topic_test-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-11-02 18:07:11,929] INFO [Controller id=0] New partition creation callback for topic_test-1,topic2-0,topic_test-2,topic2-1,topic_test-0,topic2-2 (kafka.controller.KafkaController)
[2022-11-02 18:07:12,050] INFO [Controller id=0] New topics: [Set(topic3)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic3,Some(b-ut6gZGSmmxfIoI8t9gug),Map(topic3-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), topic3-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), topic3-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-11-02 18:07:12,050] INFO [Controller id=0] New partition creation callback for topic3-0,topic3-1,topic3-2 (kafka.controller.KafkaController)
[2022-11-02 18:07:12,169] INFO [Controller id=0] New topics: [HashSet(topic_ditto)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic_ditto,Some(6xJ-WkIhSbCTQtZ2TOMT-g),Map(topic_ditto-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), topic_ditto-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), topic_ditto-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-11-02 18:07:12,170] INFO [Controller id=0] New partition creation callback for topic_ditto-0,topic_ditto-1,topic_ditto-2 (kafka.controller.KafkaController)
[2022-11-02 18:07:12,270] INFO [Controller id=0] New topics: [HashSet(topic_unity)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic_unity,Some(SjwSNTyJSQKlsDU90qv7Bg),Map(topic_unity-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), topic_unity-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), topic_unity-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-11-02 18:07:12,270] INFO [Controller id=0] New partition creation callback for topic_unity-0,topic_unity-1,topic_unity-2 (kafka.controller.KafkaController)
[2022-11-02 18:07:12,391] INFO [Controller id=0] New topics: [HashSet(topic_ditto_reply)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(topic_ditto_reply,Some(ErR2fF3IQ2qL1DHu7oapUQ),Map(topic_ditto_reply-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), topic_ditto_reply-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), topic_ditto_reply-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-11-02 18:07:12,391] INFO [Controller id=0] New partition creation callback for topic_ditto_reply-0,topic_ditto_reply-1,topic_ditto_reply-2 (kafka.controller.KafkaController)
[2022-11-02 18:07:12,641] INFO [Controller id=0] New topics: [HashSet(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(06aZFtxBSI6xCBYZ2bBySQ),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-11-02 18:07:12,641] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-11-02 18:11:12,997] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-11-02 18:11:12,998] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-11-02 18:11:13,001] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-11-02 18:11:13,002] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-11-02 18:16:13,036] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-11-02 18:16:13,037] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-11-02 18:16:13,038] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-11-02 18:16:13,038] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-11-02 18:21:13,028] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-11-02 18:21:13,029] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-11-02 18:21:13,030] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-11-02 18:21:13,030] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-11-02 18:26:13,016] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-11-02 18:26:13,017] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-11-02 18:26:13,018] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-11-02 18:26:13,018] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-11-02 18:31:13,045] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-11-02 18:31:13,047] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-11-02 18:31:13,049] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-11-02 18:31:13,049] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-11-02 18:36:13,036] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-11-02 18:36:13,037] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-11-02 18:36:13,037] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-11-02 18:36:13,037] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-11-02 18:41:13,020] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-11-02 18:41:13,021] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-11-02 18:41:13,022] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-11-02 18:41:13,022] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-11-02 18:46:13,115] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-11-02 18:46:13,116] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-11-02 18:46:13,116] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-11-02 18:46:13,116] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-11-02 18:51:13,110] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-11-02 18:51:13,111] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-11-02 18:51:13,111] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-11-02 18:51:13,111] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2022-11-02 18:56:13,104] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-11-02 18:56:13,104] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-11-02 18:56:13,105] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2022-11-02 18:56:13,105] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
